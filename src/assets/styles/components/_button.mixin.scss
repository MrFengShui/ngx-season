@mixin setup-button-theme($theme, $primaryColor, $accentColor) {
    $colors: (
        "default": "gray",
        "primary": $primaryColor,
        "accent": $accentColor,
        "success": "green",
        "warning": "yellow",
        "failure": "red",
        "info": "blue",
        "help": "gray",
    );
    $styles: ("flat", "outline", "solid");
    $alphaBoxShadow: 25;
    $alphaBTextShadow: 75;

    a {
        color: #{if($theme == "light", var(--palette-gray-900-color), var(--palette-gray-100-color))};
    }

    .button {
        --button-border-radius: #{var(--size-pixel-4)};

        --button-padding: #{var(--padding-50)};

        --button-content-gap: #{var(--margin-50)};
        --button-content-font-weight: #{var(--font-weight-900)};
        --button-content-line-height: #{var(--line-height-100)};

        --button-icon-only-padding: #{var(--padding-25)};

        @each $style in $styles {
            @each $colorKey, $colorValue in $colors {
                --button-#{$style}-bdcolor-#{$colorKey}: #{if($style == "flat", transparent, var(--palette-#{$colorValue}-500-color))};
                --button-#{$style}-bdcolor-hover-#{$colorKey}: #{if($style == "flat", transparent, var(--palette-#{$colorValue}-600-color))};
                --button-#{$style}-bdcolor-active-#{$colorKey}: #{if($style == "flat", transparent, var(--palette-#{$colorValue}-400-color))};

                --button-#{$style}-bgcolor-#{$colorKey}: #{if($style == "flat" or $style == "outline", transparent, var(--palette-#{$colorValue}-500-color))};
                --button-#{$style}-bgcolor-hover-#{$colorKey}: #{if($style == "flat" or $style == "outline", transparent, var(--palette-#{$colorValue}-600-color))};
                --button-#{$style}-bgcolor-active-#{$colorKey}: #{if($style == "flat" or $style == "outline", transparent, var(--palette-#{$colorValue}-400-color))};

                --button-#{$style}-color-#{$colorKey}: #{if($style == "flat" or $style == "outline", var(--palette-#{$colorValue}-500-color), var(--palette-#{$colorValue}-50-color))};
                --button-#{$style}-color-hover-#{$colorKey}: #{if($style == "flat" or $style == "outline", var(--palette-#{$colorValue}-600-color), var(--palette-#{$colorValue}-50-color))};
                --button-#{$style}-color-active-#{$colorKey}: #{if($style == "flat" or $style == "outline", var(--palette-#{$colorValue}-400-color), var(--palette-#{$colorValue}-50-color))};

                @if $style == "outline" {
                    @if $colorKey == "default" {
                        --button-outline-bdcolor-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-#{$colorValue}-300-color), var(--palette-#{$colorValue}-700-color))};
                        --button-outline-bgcolor-disabled-#{$colorKey}: transparent;
                        --button-outline-color-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-#{$colorValue}-300-color), var(--palette-#{$colorValue}-700-color))};
                    } @else {
                        --button-outline-bdcolor-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-200-color)};
                        --button-outline-bgcolor-disabled-#{$colorKey}: transparent;
                        --button-outline-color-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-200-color)};
                    }
                } @else if $style == "solid" {
                    @if $colorKey == "default" {
                        --button-solid-bdcolor-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-#{$colorValue}-300-color), var(--palette-#{$colorValue}-700-color))};
                        --button-solid-bgcolor-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-#{$colorValue}-300-color), var(--palette-#{$colorValue}-700-color))};
                        --button-solid-color-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-gray-200-color), var(--palette-gray-800-color))};
                    } @else {
                        --button-solid-bdcolor-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-200-color)};
                        --button-solid-bgcolor-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-200-color)};
                        --button-solid-color-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-50-color)};
                    }
                } @else {
                    @if $colorKey == "default" {
                        --button-flat-bdcolor-disabled-#{$colorKey}: transparent;
                        --button-flat-bgcolor-disabled-#{$colorKey}: transparent;
                        --button-flat-color-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-#{$colorValue}-300-color), var(--palette-#{$colorValue}-700-color))};
                    } @else {
                        --button-flat-bdcolor-disabled-#{$colorKey}: transparent;
                        --button-flat-bgcolor-disabled-#{$colorKey}: transparent;
                        --button-flat-color-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-200-color)};
                    }
                }
            }
        }

        appearance: none;
        outline: none;

        display: inline-flex;
        justify-content: center;
        align-items: center;

        border-width: var(--button-border-size);
        border-radius: var(--button-border-radius);
        border-style: solid;

        height: calc(var(--button-content-size) + var(--button-padding) * 1.5);

        padding-left: calc(var(--button-padding) * 2);
        padding-right: calc(var(--button-padding) * 2);

        > :nth-child(n) {
            &:not(:last-child) {
                margin-right: var(--button-content-gap);
            }
        }

        cursor: pointer;

        @each $style in $styles {
            &.#{$style}-icon-button {
                padding: var(--button-icon-only-padding);

                $size: calc(var(--button-content-size) + var(--button-icon-only-padding) * 2);
                min-width: $size;
                max-width: $size;
                min-height: $size;
                max-height: $size;
                width: $size;
                height: $size;

                &.button-circle {
                    border-radius: 50%;
                }
            }
        }

        &:disabled {
            cursor: not-allowed;
        }

        &.button-block {
            width: var(--size-percent-100);
        }

        &.button-solid {
            &.button-shadow {
                box-shadow: if($theme == "light", var(--box-shadow-black), var(--box-shadow-white));
            }
        }

        .button-wrapper {
            display: inline-block;

            font-size: var(--button-font-size);
            font-weight: var(--button-content-font-weight);
            line-height: var(--button-content-line-height);

            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        @each $style in $styles {
            @each $color in map-keys($colors) {
                &.#{$style}-icon-button, &.#{$style}-text-button {
                    &[data-button-color=#{$color}] {
                        border-color: var(--button-#{$style}-bdcolor-#{$color});
                        background-color: var(--button-#{$style}-bgcolor-#{$color});
                        color: var(--button-#{$style}-color-#{$color});

                        .icon {
                            svg {
                                color: var(--button-#{$style}-color-#{$color});
                            }
                        }

                        &:hover {
                            border-color: var(--button-#{$style}-bdcolor-hover-#{$color});
                            background-color: var(--button-#{$style}-bgcolor-hover-#{$color});
                            color: var(--button-#{$style}-color-hover-#{$color});

                            .icon {
                                svg {
                                    color: var(--button-#{$style}-color-hover-#{$color});
                                }
                            }
                        }

                        &:active {
                            border-color: var(--button-#{$style}-bdcolor-active-#{$color});
                            background-color: var(--button-#{$style}-bgcolor-active-#{$color});
                            color: var(--button-#{$style}-color-active-#{$color});

                            .icon {
                                svg {
                                    color: var(--button-#{$style}-color-active-#{$color});
                                }
                            }
                        }

                        &:disabled {
                            &, &:hover, &:active {
                                border-color: var(--button-#{$style}-bdcolor-disabled-#{$color});
                                background-color: var(--button-#{$style}-bgcolor-disabled-#{$color});
                                color: var(--button-#{$style}-color-disabled-#{$color});

                                .icon {
                                    svg {
                                        color: var(--button-#{$style}-color-disabled-#{$color});
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
