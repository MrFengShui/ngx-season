@mixin setup-button-theme($theme, $primaryColor, $accentColor) {
    $colors: (
        "default": "gray",
        "primary": $primaryColor,
        "accent": $accentColor,
        "success": "green",
        "warning": "yellow",
        "failure": "red",
        "info": "blue",
    );
    $styles: ("basic", "outline", "solid");
    $sizes: (
        "sm": "body-3", 
        "md": "body-1", 
        "lg": "subtitle-1",
        "xl": "title-1"
    );
    $alphaBoxShadow: 25;
    $alphaBTextShadow: 75;

    .btn {
        --button-border-sm-width: #{var(--size-pixel-1)};
        --button-border-md-width: #{var(--size-pixel-2)};
        --button-border-lg-width: #{var(--size-pixel-3)};
        --button-border-xl-width: #{var(--size-pixel-4)};
        --button-border-radius: #{var(--size-pixel-4)};

        --button-content-gap: #{var(--margin-50)};

        --button-x-axis-padding: #{var(--padding-100)};
        --button-y-axis-padding: #{var(--padding-50)};

        --button-sm-width: var(--size-pixel-24);
        --button-md-width: var(--size-pixel-36);
        --button-lg-width: var(--size-pixel-48);
        --button-xl-width: var(--size-pixel-56);
        --button-sm-height: var(--size-pixel-24);
        --button-md-height: var(--size-pixel-36);
        --button-lg-height: var(--size-pixel-48);
        --button-xl-height: var(--size-pixel-56);

        @each $style in $styles {
            @each $colorKey, $colorValue in $colors {
                --button-#{$style}-bdcolor-#{$colorKey}: #{if($style == "basic", transparent, var(--palette-#{$colorValue}-500-color))};
                --button-#{$style}-bdcolor-hover-#{$colorKey}: #{if($style == "basic", transparent, var(--palette-#{$colorValue}-600-color))};
                --button-#{$style}-bdcolor-active-#{$colorKey}: #{if($style == "basic", transparent, var(--palette-#{$colorValue}-400-color))};

                --button-#{$style}-bgcolor-#{$colorKey}: #{if($style == "basic" or $style == "outline", transparent, var(--palette-#{$colorValue}-500-color))};
                --button-#{$style}-bgcolor-hover-#{$colorKey}: #{if($style == "basic" or $style == "outline", transparent, var(--palette-#{$colorValue}-600-color))};
                --button-#{$style}-bgcolor-active-#{$colorKey}: #{if($style == "basic" or $style == "outline", transparent, var(--palette-#{$colorValue}-400-color))};

                --button-#{$style}-color-#{$colorKey}: #{if($style == "basic" or $style == "outline", var(--palette-#{$colorValue}-500-color), var(--palette-#{$colorValue}-50-color))};
                --button-#{$style}-color-hover-#{$colorKey}: #{if($style == "basic" or $style == "outline", var(--palette-#{$colorValue}-600-color), var(--palette-#{$colorValue}-50-color))};
                --button-#{$style}-color-active-#{$colorKey}: #{if($style == "basic" or $style == "outline", var(--palette-#{$colorValue}-400-color), var(--palette-#{$colorValue}-50-color))};

                @if $style == "outline" {
                    @if $colorKey == "default" {
                        --button-outline-bdcolor-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-#{$colorValue}-300-color), var(--palette-#{$colorValue}-700-color))};
                        --button-outline-bgcolor-disabled-#{$colorKey}: transparent;
                        --button-outline-color-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-#{$colorValue}-300-color), var(--palette-#{$colorValue}-700-color))};
                    } @else {
                        --button-outline-bdcolor-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-200-color)};
                        --button-outline-bgcolor-disabled-#{$colorKey}: transparent;
                        --button-outline-color-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-200-color)};
                    }
                } @else if $style == "solid" {
                    @if $colorKey == "default" {
                        --button-solid-bdcolor-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-#{$colorValue}-300-color), var(--palette-#{$colorValue}-700-color))};
                        --button-solid-bgcolor-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-#{$colorValue}-300-color), var(--palette-#{$colorValue}-700-color))};
                        --button-solid-color-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-gray-200-color), var(--palette-gray-800-color))};
                    } @else {
                        --button-solid-bdcolor-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-200-color)};
                        --button-solid-bgcolor-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-200-color)};
                        --button-solid-color-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-50-color)};
                    }
                } @else {
                    @if $colorKey == "default" {
                        --button-basic-bdcolor-disabled-#{$colorKey}: transparent;
                        --button-basic-bgcolor-disabled-#{$colorKey}: transparent;
                        --button-basic-color-disabled-#{$colorKey}: #{if($theme == "light", var(--palette-#{$colorValue}-300-color), var(--palette-#{$colorValue}-700-color))};
                    } @else {
                        --button-basic-bdcolor-disabled-#{$colorKey}: transparent;
                        --button-basic-bgcolor-disabled-#{$colorKey}: transparent;
                        --button-basic-color-disabled-#{$colorKey}: #{var(--palette-#{$colorValue}-200-color)};
                    }
                }
            }
        }

        appearance: none;
        outline: none;

        display: inline-flex;
        justify-content: center;
        align-items: center;

        @each $key in map-keys($sizes) {
            &[data-button-size=#{$key}] {
                border-width: var(--button-border-#{$key}-width);
            }
        }
        
        border-radius: var(--button-border-radius);
        border-style: solid;

        padding: var(--button-y-axis-padding) var(--button-x-axis-padding);

        > :nth-child(n) {
            &:not(:last-child) {
                margin-right: var(--button-content-gap);
            }
        }

        & {
            cursor: pointer;

            &:disabled {
                cursor: not-allowed;
            }
        }

        &.btn-block {
            width: var(--size-percent-100);
        }

        &.btn-circle {
            &.btn-icon-only {
                border-radius: 50% !important;
                padding: 0 !important;

                @each $key, $value in $sizes {
                    &[data-button-size=#{$key}] {
                        width: var(--button-#{$key}-width);
                        min-width: var(--button-#{$key}-width);
                        max-width: var(--button-#{$key}-width);
                    }
                }
            }
        }

        &.btn-solid {
            &.btn-shadow {
                box-shadow: if($theme == "light", var(--box-shadow-black), var(--box-shadow-white));
            }
        }

        @each $key, $value in $sizes {
            &[data-button-size=#{$key}] {
                height: var(--button-#{$key}-height);
                min-height: var(--button-#{$key}-height);
                max-height: var(--button-#{$key}-height);
    
                .btn-wrapper {
                    font-size: #{calc(map-get($typography, $value) / 16px)}rem;
                }
            }
        }

        @each $style in $styles {
            @each $color in map-keys($colors) {
                &.btn-#{$style} {
                    &[data-button-color=#{$color}] {
                        border-color: var(--button-#{$style}-bdcolor-#{$color});
                        background-color: var(--button-#{$style}-bgcolor-#{$color});
                        color: var(--button-#{$style}-color-#{$color});
        
                        &:hover {
                            border-color: var(--button-#{$style}-bdcolor-hover-#{$color});
                            background-color: var(--button-#{$style}-bgcolor-hover-#{$color});
                            color: var(--button-#{$style}-color-hover-#{$color});
                        }
        
                        &:active {
                            border-color: var(--button-#{$style}-bdcolor-active-#{$color});
                            background-color: var(--button-#{$style}-bgcolor-active-#{$color});
                            color: var(--button-#{$style}-color-active-#{$color});
                        }
        
                        &:disabled {
                            &, &:hover, &:active {
                                border-color: var(--button-#{$style}-bdcolor-disabled-#{$color});
                                background-color: var(--button-#{$style}-bgcolor-disabled-#{$color});
                                color: var(--button-#{$style}-color-disabled-#{$color});
                            }
                        }
                    }
                }
            }
        }
    }
}
