@mixin setup-carousel-theme($theme, $primaryColor, $accentColor) {
    $colors: (
        "default": "gray",
        "primary": $primaryColor,
        "accent": $accentColor,
        "success": "green",
        "warning": "yellow",
        "failure": "red",
        "info": "blue"
    );

    .carousel {
        --carousel-content-metainfo-x-axis-padding: #{var(--size-pixel-16)};
        --carousel-content-metainfo-y-axis-padding: #{var(--size-pixel-16)};
        --carousel-content-metainfo-font-size: #{var(--typography-body-1)};
        --carousel-content-metainfo-font-weight: bold;

        --carousel-control-x-axis-padding: #{var(--size-pixel-16)};
        --carousel-control-y-axis-padding: #{var(--size-pixel-16)};
        --carousel-control-wrapper-x-axis-margin: #{var(--size-pixel-16)};
        --carousel-control-wrapper-y-axis-margin: #{var(--size-pixel-0)};
        --carousel-control-wrapper-gap: #{var(--size-pixel-8)};
        --carousel-control-progressbar-height: #{var(--size-pixel-8)};
        --carousel-control-progressbar-margin: #{var(--size-pixel-16)};
        --carousel-control-item-border-width: #{var(--size-pixel-8)};
        --carousel-control-item-width: 160px;
        --carousel-control-item-height: 120px;
        --carousel-control-item-triangle-size: #{var(--size-pixel-12)};

        --carousel-bgcolor: #{if($theme == "light", var(--palette-gray-200-color), var(--palette-gray-800-color))};

        @each $key, $value in $colors {
            --carousel-control-progress-bgcolor-#{$key}: #{var(--palette-#{$value}-500-color)};
    
            @if $key == "default" {
                --carousel-control-progressbar-bgcolor-#{$key}: #{if($theme == "light", var(--palette-#{$value}-300-color), var(--palette-#{$value}-700-color))};

                --carousel-control-btn-bgcolor-hover-#{$key}: #{if($theme == "light", var(--palette-#{$value}-300-color), var(--palette-#{$value}-700-color))};
                --carousel-control-btn-bgcolor-active-#{$key}: #{if($theme == "light", var(--palette-#{$value}-400-color), var(--palette-#{$value}-600-color))};

                --carousel-control-btn-color-hover-#{$key}: #{if($theme == "light", var(--palette-#{$value}-700-color), var(--palette-#{$value}-300-color))};
                --carousel-control-btn-color-active-#{$key}: #{if($theme == "light", var(--palette-#{$value}-600-color), var(--palette-#{$value}-400-color))};

                --carousel-control-item-bdcolor-#{$key}: #{if($theme == "light", var(--palette-#{$value}-400-color), var(--palette-#{$value}-600-color))};
                --carousel-control-item-bgcolor-hover-#{$key}: #{if($theme == "light", var(--palette-#{$value}-300-color), var(--palette-#{$value}-700-color))};
                --carousel-control-item-bgcolor-active-#{$key}: #{if($theme == "light", var(--palette-#{$value}-400-color), var(--palette-#{$value}-600-color))};
            } @else {
                --carousel-control-progressbar-bgcolor-#{$key}: #{var(--palette-#{$value}-50-color)};

                --carousel-control-btn-bgcolor-hover-#{$key}: #{var(--palette-#{$value}-600-color)};
                --carousel-control-btn-bgcolor-active-#{$key}: #{var(--palette-#{$value}-400-color)};

                --carousel-control-btn-color-hover-#{$key}: #{var(--palette-#{$value}-50-color)};
                --carousel-control-btn-color-active-#{$key}: #{var(--palette-#{$value}-50-color)};

                --carousel-control-item-bdcolor-#{$key}: #{var(--palette-#{$value}-500-color)};
                --carousel-control-item-bgcolor-hover-#{$key}: #{var(--palette-#{$value}-600-color)};
                --carousel-control-item-bgcolor-active-#{$key}: #{var(--palette-#{$value}-400-color)};
            }
        }
        
        background-color: var(--carousel-bgcolor);

        display: inline-flex;
        flex-direction: column;

        .carousel-content {
            overflow: hidden;
            min-width: 100%;
            max-width: 100%;

            .carousel-content-wrapper {
                display: flex;
                
                .carousel-content-item {
                    min-width: 100%;
                    max-width: 100%;
                    height: fit-content;
    
                    .carousel-content-metainfo {
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
    
                        font-size: var(--carousel-content-metainfo-font-size);
                        font-weight: var(--carousel-content-metainfo-font-weight);
    
                        padding: var(--carousel-content-metainfo-y-axis-padding) var(--carousel-content-metainfo-x-axis-padding);
                    }
                }
            }
        }

        .carousel-control {
            display: flex;
            flex-direction: column;

            padding: var(--carousel-control-y-axis-padding) var(--carousel-control-x-axis-padding);

            .carousel-control-progressbar {
                border-radius: calc(var(--carousel-control-progressbar-height) * 0.5);
                height: var(--carousel-control-progressbar-height);
                margin-bottom: var(--carousel-control-progressbar-margin);
                overflow: hidden;

                .progress {
                    width: 0;
                    height: inherit;
                }
            }

            .carousel-control-wrapper {
                display: flex;
                justify-content: space-between;
                align-items: center;

                .btn {
                    max-height: var(--size-percent-100);
                    height: var(--carousel-control-item-height);

                    &:hover {
                        background-color: var(--carousel-control-btn-bgcolor-hover);
                        color: var(--carousel-control-btn-color-hover);
                    }

                    &:active {
                        background-color: var(--carousel-control-btn-bgcolor-active);
                        color: var(--carousel-control-btn-color-active);
                    }
                }

                .carousel-control-item-wrapper {
                    display: inline-flex;
    
                    margin: var(--carousel-control-wrapper-y-axis-margin) var(--carousel-control-wrapper-x-axis-margin);

                    .carousel-control-item {
                        border-color: transparent;
                        border-style: solid;
                        border-width: var(--carousel-control-item-border-width);
    
                        display: inline-flex;
                        flex-direction: column;
    
                        position: relative;
    
                        width: var(--carousel-control-item-width);
                        height: var(--carousel-control-item-height);
    
                        .triangle {
                            width: var(--size-pixel-0);
                            height: var(--size-pixel-0);
                        }
    
                        img {
                            object-fit: cover;
                        }

                        &.selected {
                            .triangle {
                                border-style: solid;
    
                                position: absolute;
    
                                width: var(--size-pixel-0);
                                height: var(--size-pixel-0);
        
                                &.triangle-left {
                                    border-width: calc(var(--carousel-control-item-triangle-size) * 2) var(--carousel-control-item-triangle-size) calc(var(--carousel-control-item-triangle-size) * 2) 0;
    
                                    top: calc(50% - var(--carousel-control-item-triangle-size) * 2);
                                    left: calc((var(--carousel-control-item-triangle-size) + var(--carousel-control-item-border-width)) * -1);
                                }
    
                                &.triangle-right {
                                    border-width: calc(var(--carousel-control-item-triangle-size) * 2) 0 calc(var(--carousel-control-item-triangle-size) * 2) var(--carousel-control-item-triangle-size);
    
                                    top: calc(50% - var(--carousel-control-item-triangle-size) * 2);
                                    right: calc((var(--carousel-control-item-triangle-size) + var(--carousel-control-item-border-width)) * -1);
                                }
                            }
                        }
                    }
    
                    > :nth-child(n) {
                        &:not(:last-child) {
                            margin-right: var(--carousel-control-wrapper-gap);
                        }
                    }
                }
            }
        }

        @each $color in map-keys($colors) {
            &[data-carousel-color=#{$color}] {
                .carousel-control {
                    .carousel-control-progressbar {
                        background-color: var(--carousel-control-progressbar-bgcolor-#{$color});

                        .progress {
                            background-color: var(--carousel-control-progress-bgcolor-#{$color});
                        }
                    }

                    .carousel-control-wrapper {
                        .btn {
                            &:hover {
                                background-color: var(--carousel-control-btn-bgcolor-hover-#{$color});
                                color: var(--carousel-control-btn-color-hover-#{$color});
                            }
        
                            &:active {
                                background-color: var(--carousel-control-btn-bgcolor-active-#{$color});
                                color: var(--carousel-control-btn-color-active-#{$color});
                            }
                        }

                        .carousel-control-item-wrapper {
                            .carousel-control-item {
                                &:hover {
                                    background-color: var(--carousel-control-item-bgcolor-hover-#{$color});
                                }
        
                                &:active {
                                    background-color: var(--carousel-control-item-bgcolor-active-#{$color});
                                }
            
                                &.selected {
                                    border-color: var(--carousel-control-item-bdcolor-#{$color});

                                    .triangle {
                                        &.triangle-left {
                                            border-color: transparent var(--carousel-control-item-bdcolor-#{$color}) transparent transparent;
                                        }
    
                                        &.triangle-right {
                                            border-color: transparent transparent transparent var(--carousel-control-item-bdcolor-#{$color});
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}