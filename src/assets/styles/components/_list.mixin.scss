@mixin setup-list-theme($theme, $colors) {
    $names: ("header", "footer", "section", "item");

    .list {
        --list-header-font-size: #{var(--font-size-20)};
        --list-header-font-weight: #{var(--font-weight-900)};
        --list-header-line-height: #{var(--line-height-100)};
        --list-header-gap: #{var(--col-gap-100)};
        --list-header-padding: #{var(--padding-100)};
        --list-header-size: #{var(--size-pixel-56)};

        --list-footer-font-size: #{var(--font-size-20)};
        --list-footer-font-weight: #{var(--font-weight-900)};
        --list-footer-line-height: #{var(--line-height-100)};
        --list-footer-gap: #{var(--col-gap-100)};
        --list-footer-padding: #{var(--padding-100)};
        --list-footer-size: #{var(--size-pixel-56)};

        --list-section-font-size: #{var(--font-size-18)};
        --list-section-font-weight: #{var(--font-weight-900)};
        --list-section-line-height: #{var(--line-height-100)};
        --list-section-gap: #{var(--col-gap-100)};
        --list-section-padding: #{var(--padding-100)};
        --list-section-size: #{var(--size-pixel-48)};

        --list-item-font-size: #{var(--font-size-16)};
        --list-item-font-weight: #{var(--font-weight-500)};
        --list-item-line-height: #{var(--line-height-150)};
        --list-item-gap: #{var(--col-gap-100)};
        --list-item-padding: #{var(--padding-100)};
        --list-item-size: #{var(--size-pixel-48)};

        --list-option-mark-size: #{var(--size-pixel-16)};

        --list-divider-thickness: #{var(--size-pixel-1)};
        --list-divider-margin: #{var(--margin-50)};

        --meta-list-gap: #{var(--row-gap-100)};

        @each $key, $value in $colors {
            @if $key == "default" {
                --list-header-bgcolor: #{if($theme == "light", var(--palette-#{$value}-100-color), var(--palette-#{$value}-900-color))};
                --list-footer-bgcolor: #{if($theme == "light", var(--palette-#{$value}-100-color), var(--palette-#{$value}-900-color))};
                --list-section-bgcolor: #{if($theme == "light", var(--palette-#{$value}-100-color), var(--palette-#{$value}-900-color))};
                --list-item-bgcolor: #{if($theme == "light", var(--palette-#{$value}-100-color), var(--palette-#{$value}-900-color))};

                --list-divider-bgcolor: #{if($theme == "light", var(--palette-#{$value}-color-10), var(--palette-#{$value}-color-30))};
            }

            --list-option-mark-bgcolor-#{$key}: #{var(--palette-#{$value}-500-color)};

            --list-stripe-odd-bgcolor-#{$key}: #{var(--palette-#{$value}-color-85)};
            --list-stripe-even-bgcolor-#{$key}: #{if($theme == "light", var(--palette-#{$value}-color-15), var(--palette-#{$value}-color-35))};
        }

        display: inline-flex;
        flex-direction: column;

        list-style: none;

        margin: var(--margin-0);
        padding: var(--padding-0);

        width: fit-content;
        height: fit-content;

        user-select: none;

        @each $name in $names {
            .list-#{$name} {
                display: inline-flex;
                align-items: center;

                background-color: var(--list-#{$name}-bgcolor);

                column-gap: var(--list-#{$name}-gap);

                font-size: var(--list-#{$name}-font-size);
                font-weight: var(--list-#{$name}-font-weight);
                line-height: var(--list-#{$name}-line-height);

                padding-left: var(--list-#{$name}-padding);
                padding-right: var(--list-#{$name}-padding);

                min-height: var(--list-#{$name}-size);
                max-height: var(--list-#{$name}-size);
            }
        }

        .list-divider {
            background-color: var(--list-divider-bgcolor);

            height: var(--list-divider-thickness);

            margin-top: var(--list-divider-margin);
            margin-bottom: var(--list-divider-margin);
        }

        &.meta-list {
            .list-item {
                max-height: calc(var(--list-item-size) * 6);

                overflow: hidden;
            }

            &:not(&.list-splitted) {
                row-gap: var(--meta-list-gap);
            }
        }

        &.select-list {
            .list-option {
                cursor: pointer;

                &:before, &::after {
                    content: "";

                    display: inline-block;

                    min-width: var(--list-option-mark-size);
                    max-width: var(--list-option-mark-size);
                    height: var(--list-option-mark-size);
                }
            }

            &[data-select-list-mark=check] {
                .list-option {
                    &:before, &::after {
                        clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
                    }
                }
            }

            &[data-select-list-mark=cross] {
                .list-option {
                    &:before, &::after {
                        clip-path: polygon(20% 0%, 0% 20%, 30% 50%, 0% 80%, 20% 100%, 50% 70%, 80% 100%, 100% 80%, 70% 50%, 100% 20%, 80% 0%, 50% 30%);
                    }
                }
            }

            &[data-select-list-mark-position=after] {
                .list-option {
                    &::before {
                        display: none;
                    }
                }
            }

            &[data-select-list-mark-position=before] {
                .list-option {
                    &::after {
                        display: none;
                    }
                }
            }

            @each $color in map-keys($colors) {
                &[data-select-list-mark-color=#{$color}] {
                    .list-option {
                        &.selected {
                            &::before, &::after {
                                background-color: var(--list-option-mark-bgcolor-#{$color});
                            }
                        }
                    }
                }
            }
        }

        @each $color in map-keys($colors) {
            &[data-list-color=#{$color}] {
                &.list-striped {
                    .list-item {
                        &:nth-child(odd) {
                            background-color: var(--list-stripe-odd-bgcolor-#{$color});
                        }

                        &:nth-child(even) {
                            background-color: var(--list-stripe-even-bgcolor-#{$color});
                        }
                    }
                }
            }
        }
    }

    .drag-drop-list {
        --drag-drop-list-border-width: #{var(--size-pixel-1)};
        --drag-drop-list-gap: #{var(--col-gap-100)};

        --drag-drop-list-placeholder-border-width: #{var(--size-pixel-2)};

        @each $key, $value in $colors {
            @if $key == "default" {
                --drag-drop-list-placeholder-bdcolor: #{if($theme == "light", var(--palette-#{$value}-300-color), var(--palette-#{$value}-700-color))};
                --drag-drop-list-placeholder-bgcolor: #{if($theme == "light", var(--palette-#{$value}-200-color), var(--palette-#{$value}-800-color))};

                --drag-drop-list-preview-bgcolor: #{if($theme == "light", var(--palette-#{$value}-300-color), var(--palette-#{$value}-700-color))};
            }

            --drag-drop-list-bdcolor-#{$key}: #{var(--palette-#{$value}-color-50)};
        }

        display: inline-flex;

        column-gap: var(--drag-drop-list-gap);

        .list {
            border-style: solid;
            border-width: var(--drag-drop-list-border-width);

            width: var(--size-percent-100);
            height: calc-size(auto, size);

            .cdk-drag-animating {
                transition: transform var(--drag-drop-list-duration) ease-in-out;
            }

            .cdk-drag-placeholder {
                border-color: var(--drag-drop-list-placeholder-bdcolor);
                border-style: dashed;
                border-width: var(--drag-drop-list-placeholder-border-width);

                background-color: var(--drag-drop-list-placeholder-bgcolor);

                height: var(--list-item-size);

                transition: transform var(--drag-drop-list-duration) ease-in-out;
            }

            &.cdk-drop-list-dragging {
                cursor: move;

                .list-item {
                    &:not(.cdk-drag-placeholder) {
                        transition: transform var(--drag-drop-list-duration) ease-in-out;
                    }
                }
            }
        }

        @each $color in map-keys($colors) {
            &[data-drag-drop-list-color=#{$color}] {
                .list {
                    border-color: var(--drag-drop-list-bdcolor-#{$color});
                }
            }
        }
    }

    .cdk-drag-preview {
        display: none;
    }
}
